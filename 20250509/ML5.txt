지도학습의 종류: 분류 회귀
분류 주어진 데이터를 정해진 카테고리에 따리 정리하는 처리과정
이미지 분류도 Classification 처리의 하나
예시) 스팸메일/일반메일, 동물분류

회귀 데이터들의 특징 기준으로 연속된 값을 예측,특정한 패턴이나 트렌트, 경향을 예측할때 사용
예시) 강남의 주택 평수에 따른 주택 매매가 예측

선형 회귀 분석
종족 변수와 한개 이상의 독립 변수 간의 선형 관계를 모델링하는 통계적 기법
단순회귀,다항,다중

fit_intercept,copy_X,n_jobs,positive

데이터를 설명하는 직선을 만드는게 리니어 리그레션 MAE,MSE 등등의 방법으로 그린다
주요요소: 절편, 기울기, 오차항

실제값과 예측값을 빼서 제곱해서 부호를 없애고 평균을 구한다
오차를 더 뚜렷하게 확인하기 위해 절대값보다 제곱을 더 선호한다

y = wx+b 이므로 MSE는 (y-y’)**2 = (wx+b-y’)**2
w에 대한 2차 함수를 형성 b에대해서도 2차함수를 형성
mse가 가장 작아지는 지점: Error값이 가장 작아지는 지점의 w와 b!!
w와b의 변경을 통해 MSE가 최저(0)가 되는 지점을 찾는다 >>> 편미분(w만 미분하겠다 나머지는 상수가된다 예를들어)
여기서의 변수는 w(기울기)와 b(절편)만 있다

로지스틱 회귀
l1,l2 정규화
C:기본 정규화의 강도를 역수로 조절 값이 작을수록 정규화가 강해짐
fit_intercept설명: 모델이 절편을 계산할지 여부를 결정합니다. 일반적으로 True(1)로
설정합니다.
solver설명: 최적화 문제를 해결하기 위해 사용할 알고리즘
'liblinear': 작은 데이터셋에 적합 .'lbfgs'(기본값) , 'sag', 'saga': 대규모 데이터셋에 적합
'newton-cg': L2 정규화에 적합.(잘 안거드림)
 max_iter설명: 최적화 알고리즘이 수렴할 때까지의 반복 횟수 100
 multi_class설명: 다중 클래스 분류를 위한 방법을 설정
'ovr': 이진 분류 문제로 각 클래스를 개별적으로 분류.
'multinomial': 클래스 간의 상대적 확률을 직접 모델링 auto
. random_state설명: 솔버의 난수 발생기 시드를 설정,none

분류 문제에서는
데이터가 고차원적이거나 특성이 많을 경우 과적합(overfitting)이 발생할 가능성이 높아,
L1(라쏘)이나 L2(릿지) 정규화를 통해 모델 복잡성을 제어할 필요성이 큽니다.

데이터가 어떤 범주에 속할 확률을 0과 1사이의 값으로 예측하고 가능성이 더 높은 범주에 속하는 것으로 분류

시그모이드 함수 기본 활성 함수 내장 되어있다
확률을 0에서 1사이로 커브 모양으로 나타내게 해주는 함수 0부터 사이의 값으로 변환

로지스틱 회귀는 선형 모델인가?
로지스특 회귀가 선형회귀와 구별괴는 이유는 종속변수의 변환에 있다
로지스틱 회귀에서는 종속 변수를 이진(binary) 분류하기 위해 함수를
사용.
입력 변수의 선형 조합을 취한 후, 0과 1 사이의 값을 출력.
로지스틱 회귀는 선형 모델의 출력을 비선형 함수를 통해 변환하여 사용하는
방식으로, 비선형 문제를 해결하고 있다.

이러한 특성으로 인해 로지스틱 회귀는 비선셩 모델로 간주하고
현실에 데이터는 시그모이드를 적용했을때 좀더 현실을 잘반영한다

basic linear regression(process)

코딩 환경 구성:코드작성에 필요한 패키지/라이브러리 업로드
import matplotlib.pyplot as plt, from sklearn.linear_model import LinearRegression
데이터 로드:numpy의 random함수로 x, y, delta 100개 생성, 정렬
sorted(10 * np.random.rand(100, 1)) + delta
데이터 탐색(EDA):데이터셋의 구성, 변수의 분포, 변수들 간의 상관 관계 등을 탐색. 시각화 도구
plt.plot(X, Y, 'o’), plt.show()
데이터 전처리:학습에 적합한 형태로 가공. 변수 스케일링, 결측치 처리, 범주형 변수 인코딩 등.
StandardScaler(), train_test_split(X,Y,test_size = 0.3)
모델 학습:예측 모델을 선택. 선형 회귀, 의사결정 트리, 랜덤 포레스트 등 다양한 모델.
model = LinearRegression() model.fit(X_train, y_train)
모델 평가:학습된 모델의 성능을 평가. MSE, 결정 계수(R-squared) 등을 사용.
model.score(X_test, y_test)

결정계수 모델이 얼마나 설득력이 있는가